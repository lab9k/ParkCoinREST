const config = require('./config.json');
const Web3 = require('web3');
const web3 = new Web3(new Web3.providers.HttpProvider(config.infuraNode));

function _getTimestampForId(id, regio) {
    let abi = config.contractABI;
    let contractAddress = config.contractAddress;
    let contractInstance = new web3.eth.Contract(abi, contractAddress);

    return new Promise((resolve, reject) => {
        contractInstance.methods.tickets(id, regio).call((error, value) => {
            if (error) {
                reject(error);
            } else {
                resolve(value);
            }
        });
    });
}

let abi = config.contractABI; /* abi as generated by the compiler */
let ClientReceipt = web3.eth.contract(abi);
let clientReceipt = ClientReceipt.at(config.contractAdress /* address */);

let event = clientReceipt.Park();

// watch for changes
event.watch(function (error, result) {
    // result will contain various information
    // including the argumets given to the Deposit
    // call.
    if (!error) {
        console.log(result);
    }
});

// Or pass a callback to start watching immediately
clientReceipt.Park(function (error, result) {
    if (!error) {
        console.log(result);
    }
});

module.exports = {
    getTimestampForId: (id, regio) => {
        return _getTimestampForId(id, regio);
    }
};